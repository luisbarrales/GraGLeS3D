<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Voro++: common.cc Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />



</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">Voro++
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.5.1 -->
<script type="text/javascript" src="dynsections.js"></script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<div class="title">common.cc</div>  </div>
</div>
<div class="contents">
<a href="common_8cc.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Voro++, a 3D cell-based Voronoi library</span>
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// Author   : Chris H. Rycroft (LBL / UC Berkeley)</span>
<a name="l00004"></a>00004 <span class="comment">// Email    : chr@alum.mit.edu</span>
<a name="l00005"></a>00005 <span class="comment">// Date     : August 30th 2011</span>
<a name="l00006"></a>00006 <span class="comment"></span>
<a name="l00007"></a>00007 <span class="comment">/** \file common.cc</span>
<a name="l00008"></a>00008 <span class="comment"> * \brief Implementations of the small helper functions. */</span>
<a name="l00009"></a>00009 
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;<a class="code" href="common_8hh.html" title="Header file for the small helper functions.">common.hh</a>&quot;</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="keyword">namespace </span>voro {
<a name="l00013"></a>00013 <span class="comment"></span>
<a name="l00014"></a>00014 <span class="comment">/** \brief Prints a vector of integers.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * Prints a vector of integers.</span>
<a name="l00017"></a>00017 <span class="comment"> * \param[in] v the vector to print.</span>
<a name="l00018"></a>00018 <span class="comment"> * \param[in] fp the file stream to print to. */</span>
<a name="l00019"></a>00019 <span class="keywordtype">void</span> voro_print_vector(vector&lt;int&gt; &amp;v,FILE *fp) {
<a name="l00020"></a>00020         <span class="keywordtype">int</span> k=0,s=v.size();
<a name="l00021"></a>00021         <span class="keywordflow">while</span>(k+4&lt;s) {
<a name="l00022"></a>00022                 fprintf(fp,<span class="stringliteral">&quot;%d %d %d %d &quot;</span>,v[k],v[k+1],v[k+2],v[k+3]);
<a name="l00023"></a>00023                 k+=4;
<a name="l00024"></a>00024         }
<a name="l00025"></a>00025         <span class="keywordflow">if</span>(k+3&lt;=s) {
<a name="l00026"></a>00026                 <span class="keywordflow">if</span>(k+4==s) fprintf(fp,<span class="stringliteral">&quot;%d %d %d %d&quot;</span>,v[k],v[k+1],v[k+2],v[k+3]);
<a name="l00027"></a>00027                 <span class="keywordflow">else</span> fprintf(fp,<span class="stringliteral">&quot;%d %d %d&quot;</span>,v[k],v[k+1],v[k+2]);
<a name="l00028"></a>00028         } <span class="keywordflow">else</span> {
<a name="l00029"></a>00029                 <span class="keywordflow">if</span>(k+2==s) fprintf(fp,<span class="stringliteral">&quot;%d %d&quot;</span>,v[k],v[k+1]);
<a name="l00030"></a>00030                 <span class="keywordflow">else</span> fprintf(fp,<span class="stringliteral">&quot;%d&quot;</span>,v[k]);
<a name="l00031"></a>00031         }
<a name="l00032"></a>00032 }
<a name="l00033"></a>00033 <span class="comment"></span>
<a name="l00034"></a>00034 <span class="comment">/** \brief Prints a vector of doubles.</span>
<a name="l00035"></a>00035 <span class="comment"> *</span>
<a name="l00036"></a>00036 <span class="comment"> * Prints a vector of doubles.</span>
<a name="l00037"></a>00037 <span class="comment"> * \param[in] v the vector to print.</span>
<a name="l00038"></a>00038 <span class="comment"> * \param[in] fp the file stream to print to. */</span>
<a name="l00039"></a>00039 <span class="keywordtype">void</span> voro_print_vector(vector&lt;double&gt; &amp;v,FILE *fp) {
<a name="l00040"></a>00040         <span class="keywordtype">int</span> k=0,s=v.size();
<a name="l00041"></a>00041         <span class="keywordflow">while</span>(k+4&lt;s) {
<a name="l00042"></a>00042                 fprintf(fp,<span class="stringliteral">&quot;%g %g %g %g &quot;</span>,v[k],v[k+1],v[k+2],v[k+3]);
<a name="l00043"></a>00043                 k+=4;
<a name="l00044"></a>00044         }
<a name="l00045"></a>00045         <span class="keywordflow">if</span>(k+3&lt;=s) {
<a name="l00046"></a>00046                 <span class="keywordflow">if</span>(k+4==s) fprintf(fp,<span class="stringliteral">&quot;%g %g %g %g&quot;</span>,v[k],v[k+1],v[k+2],v[k+3]);
<a name="l00047"></a>00047                 <span class="keywordflow">else</span> fprintf(fp,<span class="stringliteral">&quot;%g %g %g&quot;</span>,v[k],v[k+1],v[k+2]);
<a name="l00048"></a>00048         } <span class="keywordflow">else</span> {
<a name="l00049"></a>00049                 <span class="keywordflow">if</span>(k+2==s) fprintf(fp,<span class="stringliteral">&quot;%g %g&quot;</span>,v[k],v[k+1]);
<a name="l00050"></a>00050                 <span class="keywordflow">else</span> fprintf(fp,<span class="stringliteral">&quot;%g&quot;</span>,v[k]);
<a name="l00051"></a>00051         }
<a name="l00052"></a>00052 }
<a name="l00053"></a>00053 <span class="comment"></span>
<a name="l00054"></a>00054 <span class="comment">/** \brief Prints a vector a face vertex information.</span>
<a name="l00055"></a>00055 <span class="comment"> *</span>
<a name="l00056"></a>00056 <span class="comment"> * Prints a vector of face vertex information. A value is read, which</span>
<a name="l00057"></a>00057 <span class="comment"> * corresponds to the number of vertices in the next face. The routine reads</span>
<a name="l00058"></a>00058 <span class="comment"> * this number of values and prints them as a bracked list. This is repeated</span>
<a name="l00059"></a>00059 <span class="comment"> * until the end of the vector is reached.</span>
<a name="l00060"></a>00060 <span class="comment"> * \param[in] v the vector to interpret and print.</span>
<a name="l00061"></a>00061 <span class="comment"> * \param[in] fp the file stream to print to. */</span>
<a name="l00062"></a>00062 <span class="keywordtype">void</span> voro_print_face_vertices(vector&lt;int&gt; &amp;v,FILE *fp) {
<a name="l00063"></a>00063         <span class="keywordtype">int</span> j,k=0,l;
<a name="l00064"></a>00064         <span class="keywordflow">if</span>(v.size()&gt;0) {
<a name="l00065"></a>00065                 l=v[k++];
<a name="l00066"></a>00066                 <span class="keywordflow">if</span>(l&lt;=1) {
<a name="l00067"></a>00067                         <span class="keywordflow">if</span>(l==1) fprintf(fp,<span class="stringliteral">&quot;(%d)&quot;</span>,v[k++]);
<a name="l00068"></a>00068                         <span class="keywordflow">else</span> fputs(<span class="stringliteral">&quot;()&quot;</span>,fp);
<a name="l00069"></a>00069                 } <span class="keywordflow">else</span> {
<a name="l00070"></a>00070                         j=k+l;
<a name="l00071"></a>00071                         fprintf(fp,<span class="stringliteral">&quot;(%d&quot;</span>,v[k++]);
<a name="l00072"></a>00072                         <span class="keywordflow">while</span>(k&lt;j) fprintf(fp,<span class="stringliteral">&quot;,%d&quot;</span>,v[k++]);
<a name="l00073"></a>00073                         fputs(<span class="stringliteral">&quot;)&quot;</span>,fp);
<a name="l00074"></a>00074                 }
<a name="l00075"></a>00075                 <span class="keywordflow">while</span>((<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>) k&lt;v.size()) {
<a name="l00076"></a>00076                         l=v[k++];
<a name="l00077"></a>00077                         <span class="keywordflow">if</span>(l&lt;=1) {
<a name="l00078"></a>00078                                 <span class="keywordflow">if</span>(l==1) fprintf(fp,<span class="stringliteral">&quot; (%d)&quot;</span>,v[k++]);
<a name="l00079"></a>00079                                 <span class="keywordflow">else</span> fputs(<span class="stringliteral">&quot; ()&quot;</span>,fp);
<a name="l00080"></a>00080                         } <span class="keywordflow">else</span> {
<a name="l00081"></a>00081                                 j=k+l;
<a name="l00082"></a>00082                                 fprintf(fp,<span class="stringliteral">&quot; (%d&quot;</span>,v[k++]);
<a name="l00083"></a>00083                                 <span class="keywordflow">while</span>(k&lt;j) fprintf(fp,<span class="stringliteral">&quot;,%d&quot;</span>,v[k++]);
<a name="l00084"></a>00084                                 fputs(<span class="stringliteral">&quot;)&quot;</span>,fp);
<a name="l00085"></a>00085                         }
<a name="l00086"></a>00086                 }
<a name="l00087"></a>00087         }
<a name="l00088"></a>00088 }
<a name="l00089"></a>00089 
<a name="l00090"></a>00090 }
</pre></div></div>
</div>


<hr class="footer"/><address class="footer"><small>
Generated on Tue Jan 17 2012 09:19:57 for Voro++ by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.7.5.1
</small></address>

</body>
</html>
